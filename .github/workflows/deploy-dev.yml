name: Deploy Dev

on:
  push:
    branches: [ master ]
  workflow_run:
    workflows: ["Data Preparation"]
    types:
      - completed
  workflow_dispatch:

# These permissions are needed to interact with GitHub's OIDC Token endpoint.
permissions:
  id-token: write
  pull-requests: write
  contents: write

env:
  TF_WORKING_DIRECTORY: terraform
  SLACK_CHANNEL: "#alerts-enrich-dev"
  AWS_ROLE: arn:aws:iam::625864138048:role/id_assume_github_infradeploy
  # PAT (Personal Access Token, generated by Milos) is used to access private repositories within an organization since
  # GithubApp's GITHUB_TOKEN can access only the workflow repository and other public repositories for the moment.
  PAT_GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  deploy-image:
    name: Deploy Image
    runs-on: ubuntu-22.04
    outputs:
      image_tag: ${{ steps.deploy_image.outputs.image_tag }}
    env:
      ENVIRONMENT: dev
      AWS_ACCOUNT: 127579097986
      ECR_REPOSITORY_URI: 127579097986.dkr.ecr.ap-southeast-2.amazonaws.com/enrich-fuzzy-matching
      DEPENDENCIES_S3_URL: s3://basiq-dev-stack-template-configurations/enrich-fuzzy-matching/docker-image-dependencies
      TF_VAR_aws_role: dev_github_infradeploy
      AWS_BASE_ROLE_ARN: arn:aws:iam::625864138048:role/id_assume_github_infradeploy

    steps:
    - name: Checkout repository code
      uses: actions/checkout@v3

    - name: Set custom ref variables
      id: ref
      run: |
        echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_ENV
      shell: bash

    - name: Check out Basiq Github Actions
      uses: actions/checkout@v3
      with:
        repository: basiqio/basiq-github-actions
        ref: v1.6.32
        token: ${{ env.PAT_GITHUB_TOKEN }}
        path: ./.github/actions/basiq-github-actions

    - name: AWS Auth
      uses: ./.github/actions/basiq-github-actions/aws-auth
      with:
        base_aws_role_arn: ${{ env.AWS_BASE_ROLE_ARN }}
        assume_aws_role: ${{ env.TF_VAR_aws_role }}
        aws_account_id: ${{ env.AWS_ACCOUNT }}
    - name: Deploy Image
      id: deploy_image
      run: |
        aws s3 cp ${{env.DEPENDENCIES_S3_URL}}/RDS_merchants.csv dependencies_s3/RDS_merchants.csv
        aws s3 cp ${{env.DEPENDENCIES_S3_URL}}/vectorizer_merchants.pk dependencies_s3/vectorizer_merchants.pk
        aws s3 cp ${{env.DEPENDENCIES_S3_URL}}/merchants_sparse.npz dependencies_s3/merchants_sparse.npz
        aws s3 cp ${{env.DEPENDENCIES_S3_URL}}/RDS_locations.csv dependencies_s3/RDS_locations.csv
        aws s3 cp ${{env.DEPENDENCIES_S3_URL}}/vectorizer_locations.pk dependencies_s3/vectorizer_locations.pk
        aws s3 cp ${{env.DEPENDENCIES_S3_URL}}/locations_sparse.npz dependencies_s3/locations_sparse.npz

        IMAGE_TAG=$(date +%s)
        aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin "${{env.AWS_ACCOUNT}}.dkr.ecr.ap-southeast-2.amazonaws.com"

        echo Build is started on `date`
        echo Building the Docker image...
        docker build --platform amd64 -t ${{env.ECR_REPOSITORY_URI}}:latest --build-arg DEPENDENCIES=dependencies_s3 .
        docker tag ${{env.ECR_REPOSITORY_URI}}:latest ${{env.ECR_REPOSITORY_URI}}:$IMAGE_TAG
        echo Build completed on `date`

        echo Pushing the Docker images...
        docker push ${{env.ECR_REPOSITORY_URI}}:latest
        docker push ${{env.ECR_REPOSITORY_URI}}:$IMAGE_TAG
        echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
      shell: bash

  deploy-cloud-formation:
    name: Deploy CloudFormation
    runs-on: ubuntu-22.04
    needs: deploy-image
    env:
      ENVIRONMENT: dev
      AWS_ACCOUNT: 127579097986
      STACK_TEMPLATE_CONFIGURATION_URL: s3://basiq-dev-stack-template-configurations/enrich-fuzzy-matching
      TF_VAR_aws_role: dev_github_infradeploy
      AWS_BASE_ROLE_ARN: arn:aws:iam::625864138048:role/id_assume_github_infradeploy

    steps:
    - name: Checkout repository code
      uses: actions/checkout@v3

    - name: Set custom ref variables
      id: ref
      run: |
        echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_ENV
      shell: bash

    - name: Check out Basiq Github Actions
      uses: actions/checkout@v3
      with:
        repository: basiqio/basiq-github-actions
        ref: v1.6.32
        token: ${{ env.PAT_GITHUB_TOKEN }}
        path: ./.github/actions/basiq-github-actions

    - name: AWS Auth
      uses: ./.github/actions/basiq-github-actions/aws-auth
      with:
        base_aws_role_arn: ${{ env.AWS_BASE_ROLE_ARN }}
        assume_aws_role: ${{ env.TF_VAR_aws_role }}
        aws_account_id: ${{ env.AWS_ACCOUNT }}

    - name: Deploy Cloud Formation
      run: |
        aws s3 cp ${{ env.STACK_TEMPLATE_CONFIGURATION_URL }}/StackTemplateConfiguration.json StackTemplateConfiguration.json
        echo "Setting Image tag: ${{ needs.deploy-image.outputs.image_tag }}"
        jq -r '.Parameters += {"ImageTag":"${{ needs.deploy-image.outputs.image_tag }}"}' StackTemplateConfiguration.json > StackTemplateConfigurationUpdated.json
        aws cloudformation package --template-file StackTemplate.yml --s3-bucket basiq-dev-code-pipeline --output-template-file StackTemplatePackaged.yml
        aws cloudformation deploy --template-file StackTemplatePackaged.yml --stack-name EnrichFuzzyMatching --capabilities CAPABILITY_NAMED_IAM --parameter-overrides file://StackTemplateConfigurationUpdated.json
      shell: bash
